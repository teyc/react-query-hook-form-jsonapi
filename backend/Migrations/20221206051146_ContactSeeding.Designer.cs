// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SampleWeb.DataAccess;

#nullable disable

namespace SampleWeb.Migrations
{
    [DbContext(typeof(MyCrmDbContext))]
    [Migration("20221206051146_ContactSeeding")]
    partial class ContactSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("SampleWeb.JsonApiResource.ContactDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ContactId");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("NextOnlineMeeting")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Contact");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = "2022-12-06T15:11:46.2593310+10:00",
                            CreatedUserId = "1",
                            DateOfBirth = new DateOnly(1985, 3, 5),
                            FirstName = "Max",
                            IsActive = 1,
                            LastName = "Melwell",
                            NextOnlineMeeting = "2022-12-25T13:00:00.0000000+10:00"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
